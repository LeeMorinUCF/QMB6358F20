#   using simulated data.
#
# Dependencies:
#   ECO6416_tools.R
#
##################################################
##################################################
# Preparing the Workspace
##################################################
# Clear workspace.
rm(list=ls(all=TRUE))
# Set working directory.
# wd_path <- '/path/to/your/folder'
# Make sure to spell it correctly and use forward slashes.
# For example:
wd_path <- "C:/Users/le279259/Desktop/ECO6416_Demos/Module02"
# Note that my folder is different because it depends on where I store my files.
setwd(wd_path)
# Or do this in one step (using buttons in  File panel).
# The copy the command that appears in the console and paste it here.
# setwd("C:/Users/le279259/Desktop/ECO6416_Demos/Module02")
# No libraries required.
# Otherwise would have a command like the following.
# library(name_of_R_package)
# We will use this later in the course.
# Read function for sampling data.
source('ECO6416_tools.R')
# This is the same as running the ECO6416_tools.R script first.
# It assumes that the script is saved in the same working folder.
##################################################
# Setting the Parameters
##################################################
# Dependent Variable: Property values (in Millions)
beta_0          <-   0.10    # Intercept
beta_income     <-   5.00    # Slope ceofficient for income
beta_cali       <-   0.25    # Slope coefficient for California
beta_earthquake <- - 0.50    # Slope coefficient for earthquake
# beta_earthquake <- - 0.00    # Slope coefficient for earthquake
# Distribution of incomes (also in millions).
avg_income <- 0.1
sd_income <- 0.01
# Fraction of dataset in California.
pct_in_cali <- 0.5
# Frequency of earthquakes (only in California).
prob_earthquake <- 0.05
# Additional terms:
sigma_2 <- 0.1      # Variance of error term
num_obs <- 100      # Number of observations in dataset
##################################################
# Generating the Data
##################################################
# Call the housing_sample function from ECO6416_Sim_Data.R.
housing_data <- housing_sample(beta_0, beta_income, beta_cali, beta_earthquake,
avg_income, sd_income, pct_in_cali, prob_earthquake,
sigma_2, num_obs)
# Summarize the data to inspect for data quality.
summary(housing_data)
# Check that earthquakes occurred only in California:
table(housing_data[, 'in_cali'], housing_data[, 'earthquake'])
# Data errors are the most frequent cause of problems in model-building.
##################################################
# Estimating the Regression Model
##################################################
# Estimate a regression model.
lm_model <- lm(data = housing_data,
formula = house_price ~ income + in_cali + earthquake)
# Output the results to screen.
summary(lm_model)
##################################################
# Generate another dataset and save it
##################################################
# Call the housing_sample function from ECO6416_Sim_Data.R.
housing_data_2 <- housing_sample(beta_0, beta_income, beta_cali, beta_earthquake,
avg_income, sd_income, pct_in_cali, prob_earthquake,
sigma_2, num_obs)
# Save this to disk.
write.csv(housing_data_2, file = 'housing_data.csv')
##################################################
#
# ECO 6416.0028 Applied Business Research Tools
#
# OLS Regression Demo
# Regression with Simulated Data
#
# Lealand Morin, Ph.D.
# Assistant Professor
# Department of Economics
# College of Business Administration
# University of Central Florida
#
# August 31, 2020
#
##################################################
#
# ECO6416_OLS_Sim gives an example of OLS regression
#   using simulated data.
#
# Dependencies:
#   ECO6416_tools.R
#
##################################################
##################################################
# Preparing the Workspace
##################################################
# Clear workspace.
rm(list=ls(all=TRUE))
# Set working directory.
# wd_path <- '/path/to/your/folder'
# Make sure to spell it correctly and use forward slashes.
# For example:
wd_path <- "C:/Users/le279259/Desktop/ECO6416_Demos/Module02"
# Note that my folder is different because it depends on where I store my files.
setwd(wd_path)
# Or do this in one step (using buttons in  File panel).
# The copy the command that appears in the console and paste it here.
# setwd("C:/Users/le279259/Desktop/ECO6416_Demos/Module02")
# No libraries required.
# Otherwise would have a command like the following.
# library(name_of_R_package)
# We will use this later in the course.
# Read function for sampling data.
source('ECO6416_tools.R')
# This is the same as running the ECO6416_tools.R script first.
# It assumes that the script is saved in the same working folder.
##################################################
# Setting the Parameters
##################################################
# Dependent Variable: Property values (in Millions)
beta_0          <-   0.10    # Intercept
beta_income     <-   5.00    # Slope ceofficient for income
beta_cali       <-   0.25    # Slope coefficient for California
beta_earthquake <- - 0.50    # Slope coefficient for earthquake
# beta_earthquake <- - 0.00    # Slope coefficient for earthquake
# Distribution of incomes (also in millions).
avg_income <- 0.1
sd_income <- 0.01
# Fraction of dataset in California.
pct_in_cali <- 0.5
# Frequency of earthquakes (only in California).
prob_earthquake <- 0.05
# Additional terms:
sigma_2 <- 0.1      # Variance of error term
num_obs <- 100      # Number of observations in dataset
##################################################
# Generating the Data
##################################################
# Call the housing_sample function from ECO6416_Sim_Data.R.
housing_data <- housing_sample(beta_0, beta_income, beta_cali, beta_earthquake,
avg_income, sd_income, pct_in_cali, prob_earthquake,
sigma_2, num_obs)
# Summarize the data to inspect for data quality.
summary(housing_data)
# Check that earthquakes occurred only in California:
table(housing_data[, 'in_cali'], housing_data[, 'earthquake'])
# Data errors are the most frequent cause of problems in model-building.
##################################################
# Estimating the Regression Model
##################################################
# Estimate a regression model.
lm_model <- lm(data = housing_data,
formula = house_price ~ income + in_cali + earthquake)
# Output the results to screen.
summary(lm_model)
##################################################
# Generate another dataset and save it
##################################################
# Call the housing_sample function from ECO6416_Sim_Data.R.
housing_data_2 <- housing_sample(beta_0, beta_income, beta_cali, beta_earthquake,
avg_income, sd_income, pct_in_cali, prob_earthquake,
sigma_2, num_obs)
# Save this to disk.
write.csv(housing_data_2, file = 'housing_data.csv')
##################################################
#
# ECO 6416.0028 Applied Business Research Tools
#
# OLS Regression Demo
# Regression with Simulated Data
#
# Lealand Morin, Ph.D.
# Assistant Professor
# Department of Economics
# College of Business Administration
# University of Central Florida
#
# August 31, 2020
#
##################################################
#
# ECO6416_OLS_Sim gives an example of OLS regression
#   using simulated data.
#
# Dependencies:
#   ECO6416_tools.R
#
##################################################
##################################################
# Preparing the Workspace
##################################################
# Clear workspace.
rm(list=ls(all=TRUE))
# Set working directory.
# wd_path <- '/path/to/your/folder'
# Make sure to spell it correctly and use forward slashes.
# For example:
wd_path <- "C:/Users/le279259/Desktop/ECO6416_Demos/Module02"
# Note that my folder is different because it depends on where I store my files.
setwd(wd_path)
# Or do this in one step (using buttons in  File panel).
# The copy the command that appears in the console and paste it here.
# setwd("C:/Users/le279259/Desktop/ECO6416_Demos/Module02")
# No libraries required.
# Otherwise would have a command like the following.
# library(name_of_R_package)
# We will use this later in the course.
# Read function for sampling data.
source('ECO6416_tools.R')
# This is the same as running the ECO6416_tools.R script first.
# It assumes that the script is saved in the same working folder.
##################################################
# Setting the Parameters
##################################################
# Dependent Variable: Property values (in Millions)
beta_0          <-   0.10    # Intercept
beta_income     <-   5.00    # Slope ceofficient for income
beta_cali       <-   0.25    # Slope coefficient for California
beta_earthquake <- - 0.50    # Slope coefficient for earthquake
# beta_earthquake <- - 0.00    # Slope coefficient for earthquake
# Distribution of incomes (also in millions).
avg_income <- 0.1
sd_income <- 0.01
# Fraction of dataset in California.
pct_in_cali <- 0.5
# Frequency of earthquakes (only in California).
prob_earthquake <- 0.05
# Additional terms:
sigma_2 <- 0.1      # Variance of error term
num_obs <- 100      # Number of observations in dataset
##################################################
# Generating the Data
##################################################
# Call the housing_sample function from ECO6416_Sim_Data.R.
housing_data <- housing_sample(beta_0, beta_income, beta_cali, beta_earthquake,
avg_income, sd_income, pct_in_cali, prob_earthquake,
sigma_2, num_obs)
# Summarize the data to inspect for data quality.
summary(housing_data)
# Check that earthquakes occurred only in California:
table(housing_data[, 'in_cali'], housing_data[, 'earthquake'])
# Data errors are the most frequent cause of problems in model-building.
##################################################
# Estimating the Regression Model
##################################################
# Estimate a regression model.
lm_model <- lm(data = housing_data,
formula = house_price ~ income + in_cali + earthquake)
# Output the results to screen.
summary(lm_model)
##################################################
# Generate another dataset and save it
##################################################
# Call the housing_sample function from ECO6416_Sim_Data.R.
housing_data_2 <- housing_sample(beta_0, beta_income, beta_cali, beta_earthquake,
avg_income, sd_income, pct_in_cali, prob_earthquake,
sigma_2, num_obs)
# Save this to disk.
write.csv(housing_data_2, file = 'housing_data.csv')
##################################################
#
# ECO 6416.0028 Applied Business Research Tools
#
# OLS Regression Demo
# Regression with Simulated Data
#
# Lealand Morin, Ph.D.
# Assistant Professor
# Department of Economics
# College of Business Administration
# University of Central Florida
#
# August 31, 2020
#
##################################################
#
# ECO6416_OLS_Sim gives an example of OLS regression
#   using simulated data.
#
# Dependencies:
#   ECO6416_tools.R
#
##################################################
##################################################
# Preparing the Workspace
##################################################
# Clear workspace.
rm(list=ls(all=TRUE))
# Set working directory.
# wd_path <- '/path/to/your/folder'
# Make sure to spell it correctly and use forward slashes.
# For example:
wd_path <- "C:/Users/le279259/Desktop/ECO6416_Demos/Module02"
# Note that my folder is different because it depends on where I store my files.
setwd(wd_path)
# Or do this in one step (using buttons in  File panel).
# The copy the command that appears in the console and paste it here.
# setwd("C:/Users/le279259/Desktop/ECO6416_Demos/Module02")
# No libraries required.
# Otherwise would have a command like the following.
# library(name_of_R_package)
# We will use this later in the course.
# Read function for sampling data.
source('ECO6416_tools.R')
# This is the same as running the ECO6416_tools.R script first.
# It assumes that the script is saved in the same working folder.
##################################################
# Setting the Parameters
##################################################
# Dependent Variable: Property values (in Millions)
beta_0          <-   0.10    # Intercept
beta_income     <-   5.00    # Slope ceofficient for income
beta_cali       <-   0.25    # Slope coefficient for California
beta_earthquake <- - 0.50    # Slope coefficient for earthquake
# beta_earthquake <- - 0.00    # Slope coefficient for earthquake
# Distribution of incomes (also in millions).
avg_income <- 0.1
sd_income <- 0.01
# Fraction of dataset in California.
pct_in_cali <- 0.5
# Frequency of earthquakes (only in California).
prob_earthquake <- 0.05
# Additional terms:
sigma_2 <- 0.1      # Variance of error term
num_obs <- 100      # Number of observations in dataset
##################################################
# Generating the Data
##################################################
# Call the housing_sample function from ECO6416_Sim_Data.R.
housing_data <- housing_sample(beta_0, beta_income, beta_cali, beta_earthquake,
avg_income, sd_income, pct_in_cali, prob_earthquake,
sigma_2, num_obs)
# Summarize the data to inspect for data quality.
summary(housing_data)
# Check that earthquakes occurred only in California:
table(housing_data[, 'in_cali'], housing_data[, 'earthquake'])
# Data errors are the most frequent cause of problems in model-building.
##################################################
# Estimating the Regression Model
##################################################
# Estimate a regression model.
lm_model <- lm(data = housing_data,
formula = house_price ~ income + in_cali + earthquake)
# Output the results to screen.
summary(lm_model)
##################################################
# Generate another dataset and save it
##################################################
# Call the housing_sample function from ECO6416_Sim_Data.R.
housing_data_2 <- housing_sample(beta_0, beta_income, beta_cali, beta_earthquake,
avg_income, sd_income, pct_in_cali, prob_earthquake,
sigma_2, num_obs)
# Save this to disk.
write.csv(housing_data_2, file = 'housing_data.csv')
# Clear workspace.
rm(list=ls(all=TRUE))
# Set working directory.
# wd_path <- '/path/to/your/folder'
wd_path <- '~/Teaching/QMB6358_Fall_2020/GitRepos/demo_10_linear_models_in_R'
setwd(wd_path)
# Check folder:
getwd()
wd_path <- '~/Teaching/QMB6358_Fall_2020/GitRepos/demo_10_linear_models_in_R'
setwd(wd_path)
wd_path <- '~/Teaching/QMB6358_Fall_2020/GitRepos/QMB6358F20/demo_10_linear_models_in_R'
setwd(wd_path)
setwd("~/Teaching/QMB6358_Fall_2020/GitRepos/QMB6358F20/demo_10_linear_models_in_R")
housing_data <- read.csv(file = 'housing_data.csv')
summary(housing_data)
# Plot a scattergraph of income and housing prices.
plot(housing_data[, 'income'],
housing_data[, 'house_price'],
main = c('House Prices vs. Income', '(all figures in millions)'),
xlab = 'Income',
ylab = 'House Prices',
col = 'blue')
plot(housing_data[, 'income'],
housing_data[, 'house_price'],
main = c('House Prices vs. Income', '(all figures in millions)'),
xlab = 'Income',
ylab = 'House Prices',
col = 'blue')
# Estimate a regression model.
lm_full_model <- lm(data = housing_data,
formula = house_price ~ income + in_cali + earthquake)
summary(lm_full_model)
pi
# Clear workspace.
rm(list=ls(all=TRUE))
# Set working directory.
# wd_path <- '/path/to/your/folder'
wd_path <- '~/Teaching/QMB6358_Fall_2020/GitRepos/QMB6358F20/demo_14_R_file_IO/LaTeX_from_R'
setwd(wd_path)
getwd()
data_file_path <- sprintf('%s/housing_data.csv', data_dir)
housing_data <- read.csv(file = data_file_path)
# Inspect the data.
summary(housing_data)
# Clear workspace.
rm(list=ls(all=TRUE))
# Set working directory.
# wd_path <- '/path/to/your/folder'
wd_path <- '~/Teaching/QMB6358_Fall_2020/GitRepos/QMB6358F20/demo_14_R_file_IO/LaTeX_from_R'
setwd(wd_path)
# Check folder:
getwd()
# Set data directory.
data_dir <- 'Data'
# Set directory for storing figures.
fig_dir <- 'Figures'
# Set directory for storing tables.
tab_dir <- 'Tables'
# Set directory for storing text.
tab_dir <- 'Text'
# Load libraries.
# The xtable library creates tex scripts for tables.
library(xtable)
# The texreg library creates tex scripts for tables from
# regression models.
library(texreg)
##################################################
# Read the dataset and run regression
##################################################
# Read the newly saved dataset.
data_file_path <- sprintf('%s/housing_data.csv', data_dir)
housing_data <- read.csv(file = data_file_path)
summary(housing_data)
lapply(housing_data, class)
# Summarize numeric variables over the entire sample.
num_var_list <- colnames(housing_data)[lapply(housing_data, class) == 'numeric']
summary(housing_data[, num_var_list])
out_tab <- data.frame(matrix(nrow = 4, ncol = length(num_var_list) + 1))
colnames(out_tab) <- c('Statistic', num_var_list)
out_tab[, 'Statistic'] <- c('Min.', 'Mean', 'S.D.', 'Max.')
for (col_name in num_var_list) {
out_tab[1, col_name] <- min(housing_data[, col_name])
out_tab[2, col_name] <- mean(housing_data[, col_name])
out_tab[3, col_name] <- sd(housing_data[, col_name])
out_tab[4, col_name] <- max(housing_data[, col_name])
}
out_tab
# Convert the table to a LaTex table.
out_xtable <- xtable(out_tab[, ],
digits = 2, label = 'tab:summary',
caption = 'Summary of Numeric Variables')
out_xtable
# Output to TeX file.
tab_file_name <- sprintf('%s/summary.tex', tab_dir)
cat(print(out_xtable), file = tab_file_name, append = FALSE)
tab_dir
# Set directory for storing tables.
tab_dir <- 'Tables'
# Set directory for storing text.
tex_dir <- 'Text'
# Output to TeX file.
tab_file_name <- sprintf('%s/summary.tex', tab_dir)
cat(print(out_xtable), file = tab_file_name, append = FALSE)
table(housing_data[, 'in_cali'], housing_data[, 'earthquake'])
# Create a table of counts of variables by state and earthquake incidence.
out_tab <- table(housing_data[, 'in_cali'], housing_data[, 'earthquake'])
?xtable
# Convert the table to a LaTex table.
out_xtable <- xtable(out_tab[, ],
digits = 2, label = 'tab:corr',
caption = 'Table of Categorical Variables')
out_xtable
out_tab
rownames(out_tab) <- c('Other', 'California')
colnames(out_tab) <- c('None', 'Earthquake')
out_tab
# Convert the table to a LaTex table.
out_xtable <- xtable(out_tab[, ],
digits = 2, label = 'tab:corr',
caption = 'Earthquake Incidence by State')
out_xtable
tab_file_name <- sprintf('%s/correlation.tex', tab_dir)
cat(print(out_xtable), file = tab_file_name, append = FALSE)
# Calculate a correlation matrix for selected variables.
corr_var_names <- c('house_price', 'income', 'in_cali', 'earthquake')
corr_matrix <- cor(housing_data[, corr_var_names])
print(round(corr_matrix, 3))
corr_matrix
# Convert the table to a LaTex table.
out_xtable <- xtable(out_tab[, ],
digits = 2, label = 'tab:earthquakes',
caption = 'Earthquake Incidence by State')
# Output to TeX file.
tab_file_name <- sprintf('%s/earthquakes.tex', tab_dir)
cat(print(out_xtable), file = tab_file_name, append = FALSE)
# Convert the table to a LaTex table.
out_xtable <- xtable(corr_matrix[, ],
digits = 3, label = 'tab:corr',
caption = 'Correlation Matrix')
# Output to TeX file.
tab_file_name <- sprintf('%s/correlation.tex', tab_dir)
cat(print(out_xtable), file = tab_file_name, append = FALSE)
tab_file_name
# Plot a scattergraph of income and housing prices.
plot(housing_data[, 'income'],
housing_data[, 'house_price'],
main = c('House Prices vs. Income', '(all figures in millions)'),
xlab = 'Income',
ylab = 'House Prices',
col = 'blue')
